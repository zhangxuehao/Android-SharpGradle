apply plugin: 'com.android.application'

//获取git commit次数
def gitVersionCode = { ->
    try {
        def stdout = new ByteArrayOutputStream()
        exec {//git rev-list --count HEAD
            commandLine 'git', 'rev-list', '--count', 'HEAD'
            standardOutput = stdout
        }
        return Integer.parseInt(stdout.toString().trim())
    } catch (ignored) {
        return 0;
    }
}

//获取git commit次数
def getGitVersion() {
    return 'git rev-parse --short HEAD'.execute().text.trim()
}

// 利用Gradle获取properties配置文件
Properties properties = new Properties()
println project.file('version.properties').absolutePath
if (project.file('version.properties').exists()) {
    properties.load(project.file('version.properties').newDataInputStream())
} else {
    println "version.properties not found"
}

android {
    

//    signingConfigs {
//        //从控制台录入签名信息
//        release_console_input {
//            storeFile file(System.console().readLine("\n\$ Enter keystore path: "))
//            storePassword new String(System.console().readPassword("\n\$ Enter keystore password: "))
//            keyAlias System.console().readLine("\n\$ Enter key alias: ")
//            keyPassword new String(System.console().readPassword("\n\$ Enter key password: "))
//        }
//        //从环境变量中获取签名信息
//        release_env {
//            storeFile file(System.getenv("KEYSTORE"))
//            storePassword System.getenv("KEYSTORE_PASSWORD")
//            keyAlias System.getenv("KEY_ALIAS")
//            keyPassword System.getenv("KEY_PASSWORD")
//        }
//    }

    compileSdkVersion 23
    buildToolsVersion "23.0.3"

    defaultConfig {
        applicationId "com.sharpandroid"
        minSdkVersion 15
        targetSdkVersion 23
        versionCode gitVersionCode()//获取git commit次数
        versionName properties.getProperty("version")
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//            signingConfig signingConfigs.release_console_input
        }
        debug {
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:23.4.0'
    compile 'com.android.support.constraint:constraint-layout:1.0.0-alpha3'
    testCompile 'junit:junit:4.12'
}


assembleDebug {}.doLast {

}